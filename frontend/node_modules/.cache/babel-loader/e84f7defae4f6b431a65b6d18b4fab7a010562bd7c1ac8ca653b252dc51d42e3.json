{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects by flutter\\\\genmon4\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport ContestList from \"./components/ContestList\";\nimport MyContests from \"./components/MyContests\";\nimport Leaderboard from \"./components/Leaderboard\";\nimport Navbar from \"./components/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // For demo, use a hardcoded userId. Replace with real auth later.\n  const [userId] = useState(\"HluqKfSyt734wPozzG3W\");\n  const handleJoin = contest => {\n    alert(`Join logic for contest: ${contest.name} (add payment here)`);\n    // Here you would show a payment modal, then call your backend to join\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(ContestList, {\n          onJoin: handleJoin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/my-contests\",\n        element: /*#__PURE__*/_jsxDEV(MyContests, {\n          userId: userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/leaderboard\",\n        element: /*#__PURE__*/_jsxDEV(Leaderboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9mBeWrWRL7ZepML5avuJ8FdqNrY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","ContestList","MyContests","Leaderboard","Navbar","jsxDEV","_jsxDEV","App","_s","userId","handleJoin","contest","alert","name","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onJoin","_c","$RefreshReg$"],"sources":["C:/projects by flutter/genmon4/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport ContestList from \"./components/ContestList\";\r\nimport MyContests from \"./components/MyContests\";\r\nimport Leaderboard from \"./components/Leaderboard\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nfunction App() {\r\n  // For demo, use a hardcoded userId. Replace with real auth later.\r\n  const [userId] = useState(\"HluqKfSyt734wPozzG3W\");\r\n\r\n  const handleJoin = (contest) => {\r\n    alert(`Join logic for contest: ${contest.name} (add payment here)`);\r\n    // Here you would show a payment modal, then call your backend to join\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Routes>\r\n        <Route path=\"/\" element={<ContestList onJoin={handleJoin} />} />\r\n        <Route path=\"/my-contests\" element={<MyContests userId={userId} />} />\r\n        <Route path=\"/leaderboard\" element={<Leaderboard />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,MAAM,CAAC,GAAGb,QAAQ,CAAC,sBAAsB,CAAC;EAEjD,MAAMc,UAAU,GAAIC,OAAO,IAAK;IAC9BC,KAAK,CAAC,2BAA2BD,OAAO,CAACE,IAAI,qBAAqB,CAAC;IACnE;EACF,CAAC;EAED,oBACEP,OAAA,CAACR,MAAM;IAAAgB,QAAA,gBACLR,OAAA,CAACF,MAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVZ,OAAA,CAACN,MAAM;MAAAc,QAAA,gBACLR,OAAA,CAACP,KAAK;QAACoB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEd,OAAA,CAACL,WAAW;UAACoB,MAAM,EAAEX;QAAW;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChEZ,OAAA,CAACP,KAAK;QAACoB,IAAI,EAAC,cAAc;QAACC,OAAO,eAAEd,OAAA,CAACJ,UAAU;UAACO,MAAM,EAAEA;QAAO;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtEZ,OAAA,CAACP,KAAK;QAACoB,IAAI,EAAC,cAAc;QAACC,OAAO,eAAEd,OAAA,CAACH,WAAW;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACV,EAAA,CAnBQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}